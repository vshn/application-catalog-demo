apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: secret-generator
  name: secret-generator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: secret-generator-kubernetes-secret-generator
  namespace: secret-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: secret-generator
      app.kubernetes.io/name: kubernetes-secret-generator
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: secret-generator
        app.kubernetes.io/name: kubernetes-secret-generator
    spec:
      containers:
        - args: []
          env:
            - name: WATCH_NAMESPACE
              value: null
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: kubernetes-secret-generator
            - name: REGENERATE_INSECURE
              value: "true"
            - name: SECRET_LENGTH
              value: "40"
          image: quay.io/mittwald/kubernetes-secret-generator:v3.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthcheck
            initialDelaySeconds: 3
            periodSeconds: 3
          name: kubernetes-secret-generator
          ports:
            - containerPort: 8080
              name: healthcheck
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthcheck
            initialDelaySeconds: 3
            periodSeconds: 3
          resources: {}
          securityContext: {}
      securityContext: {}
      serviceAccountName: secret-generator-kubernetes-secret-generator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: secret-generator-kubernetes-secret-generator
  namespace: secret-generator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: mittwald:secret-generator-kubernetes-secret-generator
  namespace: secret-generator
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: mittwald:secret-generator-kubernetes-secret-generator
  namespace: secret-generator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mittwald:secret-generator-kubernetes-secret-generator
subjects:
  - kind: ServiceAccount
    name: secret-generator-kubernetes-secret-generator
    namespace: secret-generator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: mittwald:secret-generator-kubernetes-secret-generator
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: secret-generator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubernetes-secret-generator
    app.kubernetes.io/version: v3.1.0
    helm.sh/chart: kubernetes-secret-generator-3.1.0
  name: mittwald:secret-generator-kubernetes-secret-generator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mittwald:secret-generator-kubernetes-secret-generator
subjects:
  - kind: ServiceAccount
    name: secret-generator-kubernetes-secret-generator
    namespace: secret-generator
