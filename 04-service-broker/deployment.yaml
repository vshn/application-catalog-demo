apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: service-broker
  name: service-broker
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: service-broker
  name: service-broker
  namespace: service-broker
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    name: service-broker
  name: service-broker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crossplane-edit
subjects:
  - kind: ServiceAccount
    name: service-broker
    namespace: service-broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: service-broker-redis
  name: service-broker-redis
  namespace: service-broker
spec:
  minReadySeconds: 30
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: redis
      app.kubernetes.io/name: service-broker
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: redis
        app.kubernetes.io/name: service-broker
        name: service-broker-redis
    spec:
      containers:
        - args: []
          env:
            - name: OSB_SERVICE_IDS
              value: redis-k8s
            - name: OSB_USERNAME
              value: osbuser
            - name: OSB_PASSWORD
              value: Passw0rd
            - name: OSB_NAMESPACE
              value: crossplane-system
          image: docker.io/vshn/crossplane-service-broker:v0.2.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 2
          name: service-broker
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: service-broker
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: service-broker
    name: service-broker-redis
  name: service-broker-redis
  namespace: service-broker
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: service-broker
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: service-broker
    name: service-broker-redis
  name: service-broker-redis
  namespace: service-broker
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-broker-redis
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: service-broker
    name: service-broker-redis
  name: service-broker-redis-port
  namespace: service-broker
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: 30001
  selector:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: service-broker
  type: NodePort
